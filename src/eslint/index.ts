import type { ConfigWithExtends } from "typescript-eslint";


export const EslintVenlocRecommended: ConfigWithExtends = {
  rules: {
    /* Possible problems */
    "getter-return": "error",
    "no-class-assign": "error",
    "no-cond-assign": "error",
    "no-constant-condition": "error",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty-pattern": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-new-native-nonconstructor": "error",
    "no-obj-calls": "error",
    "no-prototype-builtins": "warn",
    "no-self-assign": "error",
    "no-self-compare": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "warn",
    "no-this-before-super": "error",
    "no-unexpected-multiline": "error",
    "no-unsafe-negation": "warn",
    "no-unused-vars": "warn",
    "use-isnan": "error",
    /* Suggestions */
    "capitalized-comments": [
      "warn",
      "always",
      { ignoreInlineComments: true, ignoreConsecutiveComments: true },
    ],
    eqeqeq: ["error", "smart"],
    "guard-for-in": "error",
    "no-alert": "error",
    "no-delete-var": "error",
    "no-eval": "error",
    "no-implied-eval": "error",
    "no-new-func": "error",
    "no-octal": "error",
    "no-script-url": "error",
    "no-sequences": "error",
    "no-shadow-restricted-names": "error",
    "no-unneeded-ternary": "warn",
    "no-unused-labels": "warn",
    "no-useless-catch": "warn",
    "no-var": "error",
    "no-with": "error",
    "prefer-const": "error",
    "prefer-named-capture-group": "warn",
    "prefer-object-has-own": "warn",
    "prefer-object-spread": "warn",
    "prefer-template": "error",
    "require-await": "warn",
    "symbol-description": "error",
    yoda: ["error", "never", { exceptRange: true }],
  },
};
